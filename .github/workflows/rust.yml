name: Rust

on:
  push:
    branches: ["master"]
    tags: ["v*"]
  pull_request:
    branches: ["master"]

permissions:
  contents: write

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        target: [x86_64-unknown-linux-musl, aarch64-unknown-linux-musl, x86_64-apple-darwin, aarch64-apple-darwin, x86_64-pc-windows-msvc]
        exclude:
          # Exclude invalid combinations
          - os: macos-latest
            target: x86_64-unknown-linux-musl
          - os: macos-latest
            target: aarch64-unknown-linux-musl
          - os: macos-latest
            target: x86_64-pc-windows-msvc
          - os: ubuntu-latest
            target: x86_64-apple-darwin
          - os: ubuntu-latest
            target: aarch64-apple-darwin
          - os: ubuntu-latest
            target: x86_64-pc-windows-msvc
          - os: windows-latest
            target: x86_64-unknown-linux-musl
          - os: windows-latest
            target: aarch64-unknown-linux-musl
          - os: windows-latest
            target: x86_64-apple-darwin
          - os: windows-latest
            target: aarch64-apple-darwin

    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
      - name: Install musl-tools (Linux musl targets only)
        if: contains(matrix.target, '-unknown-linux-musl')
        run: sudo apt-get update && sudo apt-get install -y musl-tools
      - name: Build
        run: cargo build --release --target ${{ matrix.target }} --verbose
      - name: Run tests
        run: cargo test --release --target ${{ matrix.target }} --verbose
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: yuchi-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/yuchi${{ matrix.target == 'x86_64-pc-windows-msvc' && '.exe' || '' }}

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/yuchi-x86_64-unknown-linux-musl/yuchi
            artifacts/yuchi-aarch64-unknown-linux-musl/yuchi
            artifacts/yuchi-x86_64-apple-darwin/yuchi
            artifacts/yuchi-aarch64-apple-darwin/yuchi
            artifacts/yuchi-x86_64-pc-windows-msvc/yuchi.exe
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
